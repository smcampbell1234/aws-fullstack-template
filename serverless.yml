service: crud-api-nfl
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-1

functions:
  createGame:
    handler: handler.createGame
    environment:
      GAMES_TABLE_NAME: !Ref gamesTable
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:PutItem
        Resource: !GetAtt gamesTable.Arn
    events:
      - http:
          method: post
          path: games

  updateGame:
    handler: handler.updateGame
    environment:
      GAMES_TABLE_NAME: !Ref gamesTable
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:UpdateItem
        Resource: !GetAtt gamesTable.Arn
    events:
      - http:
          method: put
          path: games/{id}

  deleteGame:
    handler: handler.deleteGame
    environment:
      GAMES_TABLE_NAME: !Ref gamesTable
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:DeleteItem
        Resource: !GetAtt gamesTable.Arn
    events:
      - http:
          method: delete
          path: games/{id}

  getAllNotes:
    handler: handler.getAllGames
    events:
      - http:
          method: get
          path: games

plugins:
  - serverless-iam-roles-per-function

# you can add CloudFormation resource templates here
resources:
  Resources:
    gamesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: allGames
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: gameId
            AttributeType: S
        KeySchema:
          - AttributeName: gameId
            KeyType: HASH
